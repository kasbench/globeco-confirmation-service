apiVersion: apps/v1
kind: Deployment
metadata:
  name: globeco-confirmation-service
  namespace: globeco
  labels:
    app: globeco-confirmation-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: globeco-confirmation-service
  template:
    metadata:
      labels:
        app: globeco-confirmation-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8086"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: globeco-confirmation-service
          image: kasbench/globeco-confirmation-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8086
          env:
            - name: OTEL_SERVICE_NAME
              value: "globeco-confirmation-service"
            - name: OTEL_SERVICE_VERSION
              value: "1.0.0"
            - name: OTEL_SERVICE_NAMESPACE
              value: "globeco"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "otel-collector-collector.monitoring.svc.cluster.local:4317"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "grpc"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=globeco-confirmation-service,service.version=1.0.0,service.namespace=globeco"
            - name: TRACING_ENABLED
              value: "true"
            - name: METRICS_ENABLED
              value: "true"
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8086
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 240
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8086
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 240
            failureThreshold: 3
          # startupProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 30
